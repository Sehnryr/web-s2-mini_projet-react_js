{"version":3,"sources":["pages/PageScroller.js","lang/FlagIcon.js","menus/RightMenu.js","App.js","index.js"],"names":["useStyles","makeStyles","root","textAlign","PageScroller","props","classes","anchors","titles","content","map","title","index","className","navigation","navigationPosition","navigationTooltips","scrollingSpeed","render","Wrapper","FlagIcon","FlagIconFactory","React","useCssModules","position","top","right","RightMenu","anchor","t","useTranslation","languages","Object","keys","currentLanguage","useState","state","setState","toggleDrawer","open","event","type","key","list","style","width","role","onClick","onKeyDown","List","code","languageTranslation","flagCode","ListItem","button","selected","setLanguage","ListItemIcon","ListItemText","primary","Fragment","IconButton","Language","SwipeableDrawer","onClose","onOpen","fr_FR","en_US","App","values","getLanguage","console","log","setTranslations","setDefaultLanguage","ReactDOM","document","getElementById"],"mappings":"4sBAMMA,EAAYC,YAAW,CAC5BC,KAAM,CACLC,UAAW,YAIE,SAASC,EAAaC,GAEpC,IAAMC,EAAUN,IACVO,EAAUF,EAAMG,OAShBC,EACLJ,EAAMG,OAAOE,KAAI,SAACC,EAAOC,GAAR,OAChB,qBAAmBC,UAAU,UAA7B,SACC,oBAAIA,UAAYP,EAAQJ,KAAxB,SAAkCS,KADxBC,MAMb,OACC,cAAC,IAAD,CACCC,UAAYP,EAAQQ,WAEpBA,YAAa,EACbC,mBAAmB,OACnBC,mBAAqBT,EACrBU,eAAiB,IAEjBC,OAAQ,kBACP,cAAC,IAAcC,QAAf,UACGV,O,mGCtCQW,EAFEC,YAAgBC,EAAO,CAACC,eAAe,ICUlDvB,EAAYC,YAAW,CAC5BC,KAAM,CACLsB,SAAU,WACVC,IAAK,QACLC,MAAO,WAsEMC,MAlEf,SAAmBtB,GAClB,IAAMC,EAAUN,IACV4B,EAAS,QACTC,EAAIxB,EAAMyB,iBACVC,EAAYC,OAAOC,KAAK5B,EAAM0B,WAC9BG,EAAkB7B,EAAM6B,gBAE9B,EAA4BC,mBAAS,CACpCT,OAAO,IADR,mBAAQU,EAAR,KAAeC,EAAf,KAIMC,EAAe,SAACV,EAAQW,GAAT,OAAkB,SAACC,KACnCA,GAAwB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAIvEL,EAAS,2BAAKD,GAAN,kBAAcR,EAASW,OAG1BI,EACL,qBACEC,MAAO,CAAEC,MAAO,KAChBC,KAAK,eACLC,QAAST,EAAaV,GAAQ,GAC9BoB,UAAWV,EAAaV,GAAQ,GAJlC,SAMC,cAACqB,EAAA,EAAD,UACGlB,EAAUrB,KAAI,SAACwC,GACf,IAAMC,EAAsBtB,EAAE,aAAeqB,GACvCE,EAAW/C,EAAM0B,UAAUmB,GAAhB,KACjB,OACC,eAACG,EAAA,EAAD,CACCC,QAAM,EACNC,SAAWrB,IAAoBgB,EAC/BH,QAAU,WAAQ1C,EAAMmD,YAAYN,IAHrC,UAMC,cAACO,EAAA,EAAD,UAAc,cAAC,EAAD,CAAUP,KAAOE,MAC/B,cAACM,EAAA,EAAD,CAAcC,QAAUR,MAHlBD,UAWb,OACC,eAAC,IAAMU,SAAP,WACC,cAACC,EAAA,EAAD,CACChD,UAAYP,EAAQJ,KACpB6C,QAAUT,EAAaV,GAAQ,GAFhC,SAIC,cAACkC,EAAA,EAAD,MAED,cAACC,EAAA,EAAD,CACCnC,OAASA,EACTW,KAAOH,EAAK,MACZ4B,QAAU1B,EAAaV,GAAQ,GAC/BqC,OAAS3B,EAAaV,GAAQ,GAJ/B,SAMGe,Q,wBCjEAZ,G,MAAY,CAAEmC,QAAOC,UAKZ,SAASC,IACbtC,2BAAV,IACMtB,EAASwB,OAAOqC,OAAOtC,EAAUuC,yBAAV,QAG7B,OAFAC,QAAQC,IAAIhE,GAGX,eAAC,IAAMoD,SAAP,WACC,cAACxD,EAAD,CACCI,OAASA,EACTsB,eAAiBA,mBAElB,cAAC,EAAD,CACCI,gBAAkBoC,wBAClBvC,UAAYA,EACZyB,YAAcA,cACd1B,eAAiBA,sBAlBrB2C,0BAAgB,CAAEP,QAAOC,UACzBO,6BAAmB1C,OAAOC,KAAKF,GAAW,ICd1C4C,IAASzD,OAAO,cAACkD,EAAD,IAASQ,SAASC,eAAe,W","file":"static/js/main.288f09bb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport {\n\tmakeStyles\n} from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\"\n\t}\n})\n\nexport default function PageScroller(props) {\n\t// const t = props.useTranslation()\n\tconst classes = useStyles()\n\tconst anchors = props.titles\n\t// const [ anchors, setAnchors ] = useState(props.titles)\n\t\n\t// useEffect(() => {\n\t// \tif (anchors !== props.titles) {\n\t// \t\tsetAnchors(props.titles)\n\t// \t}\n\t// })\n\n\tconst content = (\n\t\tprops.titles.map((title, index) => (\n\t\t\t<div key={ index } className=\"section\" >\n\t\t\t\t<h1 className={ classes.root } >{ title }</h1>\n\t\t\t</div>\n\t\t))\n\t)\n\n\treturn (\n\t\t<ReactFullpage\n\t\t\tclassName={ classes.navigation }\n\n\t\t\tnavigation={ true }\n\t\t\tnavigationPosition=\"left\"\n\t\t\tnavigationTooltips={ anchors }\n\t\t\tscrollingSpeed={ 600 }\n\n\t\t\trender={() => (\n\t\t\t\t<ReactFullpage.Wrapper>\n\t\t\t\t\t{ content }\n\t\t\t\t</ReactFullpage.Wrapper>\n\t\t\t)}\n\t\t/>\n\t)\n}","import * as React from \"react\"\nimport FlagIconFactory from \"react-flag-icon-css\"\n\nconst FlagIcon = FlagIconFactory(React, {useCssModules: false})\n\nexport default FlagIcon","import React, { useState } from \"react\"\nimport { \n\tIconButton, \n\tSwipeableDrawer, \n\tList, \n\tListItem, \n\tListItemIcon, \n\tListItemText, \n\tmakeStyles\n} from \"@material-ui/core\"\nimport { Language } from \"@material-ui/icons\"\nimport FlagIcon from \"../lang/FlagIcon\"\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tposition: \"absolute\",\n\t\ttop: \".5rem\",\n\t\tright: \".5rem\"\n\t}\n})\n\nfunction RightMenu(props) {\n\tconst classes = useStyles()\n\tconst anchor = \"right\"\n\tconst t = props.useTranslation()\n\tconst languages = Object.keys(props.languages)\n\tconst currentLanguage = props.currentLanguage\n\n\tconst [ state, setState ] = useState({\n\t\tright: false\n\t})\n\n\tconst toggleDrawer = (anchor, open) => (event) => {\n\t\tif (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n\t\treturn;\n\t\t}\n\n\t\tsetState({ ...state, [anchor]: open });\n\t};\n\n\tconst list = (\n\t\t<div\n\t\t  style={{ width: 250 }}\n\t\t  role=\"presentation\"\n\t\t  onClick={toggleDrawer(anchor, false)}\n\t\t  onKeyDown={toggleDrawer(anchor, false)}\n\t\t>\n\t\t\t<List>\n\t\t\t\t{ languages.map((code) => {\n\t\t\t\t\t\tconst languageTranslation = t(\"languages.\" + code)\n\t\t\t\t\t\tconst flagCode = props.languages[code][\"code\"]\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ListItem \n\t\t\t\t\t\t\t\tbutton \n\t\t\t\t\t\t\t\tselected={ currentLanguage === code }\n\t\t\t\t\t\t\t\tonClick={ () => { props.setLanguage(code) } }\n\t\t\t\t\t\t\t\tkey={ code }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemIcon><FlagIcon code={ flagCode } /></ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={ languageTranslation } />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t)\n\t\t\t\t}) }\n\t\t\t</List>\n\t\t</div>\n\t  );\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<IconButton  \n\t\t\t\tclassName={ classes.root }\n\t\t\t\tonClick={ toggleDrawer(anchor, true) }\n\t\t\t>\n\t\t\t\t<Language />\n\t\t\t</IconButton>\n\t\t\t<SwipeableDrawer\n\t\t\t\tanchor={ anchor }\n\t\t\t\topen={ state[anchor] }\n\t\t\t\tonClose={ toggleDrawer(anchor, false) }\n\t\t\t\tonOpen={ toggleDrawer(anchor, true) }\n\t\t\t>\n\t\t\t\t{ list }\n\t\t\t</SwipeableDrawer>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default RightMenu","import React from \"react\"\nimport PageScroller from \"./pages/PageScroller\"\nimport { RightMenu } from \"./menus/Menus\"\nimport { \n\tsetLanguage,\n\tsetTranslations,\n\tsetDefaultLanguage,\n\tuseTranslation,\n\tgetLanguage\n} from \"react-multi-lang\";\n\nimport fr_FR from \"./lang/fr_FR.json\"\nimport en_US from \"./lang/en_US.json\"\n\nimport \"./style.css\"\n\nconst languages = { fr_FR, en_US }\n\nsetTranslations({ fr_FR, en_US })\nsetDefaultLanguage(Object.keys(languages)[0])\n\nexport default function App() {\n\tconst t = useTranslation()\n\tconst titles = Object.values(languages[getLanguage()][\"titles\"])\n\tconsole.log(titles)\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<PageScroller \n\t\t\t\ttitles={ titles }\n\t\t\t\tuseTranslation={ useTranslation }\n\t\t\t/>\n\t\t\t<RightMenu \n\t\t\t\tcurrentLanguage={ getLanguage() }\n\t\t\t\tlanguages={ languages }\n\t\t\t\tsetLanguage={ setLanguage }\n\t\t\t\tuseTranslation={ useTranslation }\n\t\t\t/>\n\t\t</React.Fragment>\n\t)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}